<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>https://daniel.roygreenfeld.com/</id><title>pydanny</title><updated>2020-08-21T16:59:28.454283+00:00</updated><author><name>Daniel Roy Greenfeld</name><email>daniel.roy.greenfeld@roygreenfeld.com</email></author><link href="https://daniel.roygreenfeld.com" rel="alternate"/><link href="https://daniel.roygreenfeld.com/feeds/python.atom.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator><logo>https://daniel.roygreenfeld.com/images/personalPhoto.png</logo><subtitle>Inside the Head of Daniel Roy Greenfeld</subtitle><entry><id>https://daniel.roygreenfeld.com/feed-generator.html</id><title>Feed Generator</title><updated>2020-01-30T22:20:50.520000+00:00</updated><content type="html">&lt;p&gt;Late last year I &lt;a href="/moving-to-vuepress.html"&gt;changed my blog engine yet again&lt;/a&gt;. I've been happy with it so far, with the exception of XML feeds. The tooling I chose doesn't have good support for feeds, certainly not with the filtering I need. Specifically, I need to have a &lt;code&gt;python&lt;/code&gt; feed, a &lt;code&gt;family&lt;/code&gt; feed, and so on. As much as I love my &lt;a href="https://audrey.roygreenfeld.com"&gt;wife&lt;/a&gt; and &lt;a href="/recap-2019-resolutions-2020.html#my-daughter-was-born"&gt;daughter&lt;/a&gt;, non-technical posts about them probably don't belong on places where this post will show up.&lt;/p&gt;

&lt;p&gt;After trying to work within the framework of the blog engine (Vuepress), I got tired of fighting abstraction and gave up. My blog wouldn't have an XML feed.&lt;/p&gt;

&lt;h1&gt;Solution&lt;/h1&gt;

&lt;p&gt;Last night I decided to go around the problem. In 30 minutes I coded up a solution, a Python script that bypasses the Vuepress abstraction. You can see it below:&lt;/p&gt;

&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;generate_feed.py&lt;/span&gt;

&lt;span class="sd"&gt;Usage:&lt;/span&gt;

&lt;span class="sd"&gt;    python generate_feed.py TAGHERE&lt;/span&gt;

&lt;span class="sd"&gt;Note:&lt;/span&gt;

&lt;span class="sd"&gt;    Works with Python 3.8, untested otherwise.&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;feedgen.feed&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FeedGenerator&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;yaml&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;safe_load&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You need to install pyyaml, feedgen, and markdown2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Add a tag argument such as &amp;quot;python&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# TODO - convert to argument&lt;/span&gt;
    &lt;span class="n"&gt;YEARS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;2020&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;markdowner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extras&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fenced-code-blocks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="n"&gt;fg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FeedGenerator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://daniel.roygreenfeld.com/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pydanny&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Daniel Roy Greenfeld&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;daniel.roy.greenfeld@roygreenfeld.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://daniel.roygreenfeld.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;alternate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://daniel.roygreenfeld.com/images/personalPhoto.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subtitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Inside the Head of Daniel Roy Greenfeld&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://daniel.roygreenfeld.com/atom.&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;self&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_posts/posts&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/*.md&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;YEARS&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;

        &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;safe_load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;---&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;---&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;:]&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;

    &lt;span class="n"&gt;feed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="k"&gt;continue&lt;/span&gt;

            &lt;span class="c1"&gt;# add the metadata&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_entry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://daniel.roygreenfeld.com/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;slug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pubDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;updated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

            &lt;span class="c1"&gt;# Add the content&lt;/span&gt;
            &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdowner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atom_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pretty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atom_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.vuepress/public/feeds/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.atom.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You call this on my blog for all &lt;code&gt;python&lt;/code&gt; tagged content by running it thus:&lt;/p&gt;

&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python generate_feed.py python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result &lt;a href="https://validator.w3.org/feed/#validate_by_input"&gt;validates per W3C&lt;/a&gt; and should work everywhere. Yeah! &lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;This is what I've always enjoyed about Python. In a very short time I can throw together a script that makes my life better. &lt;/p&gt;
</content><published>2020-01-30T22:20:50.520000+00:00</published></entry><entry><id>https://daniel.roygreenfeld.com/crash-into-django.html</id><title>Our New Django Book Has Launched!</title><updated>2020-02-10T22:20:50.520000+00:00</updated><content type="html">&lt;p&gt;Audrey and I wrote a new book titled &lt;a href="https://roygreenfeld.com/products/django-crash-course"&gt;Django Crash Course&lt;/a&gt;. You can get it right now on our website at &lt;a href="https://roygreenfeld.com/products/django-crash-course"&gt;roygreenfeld.com/products/django-crash-course&lt;/a&gt;. Right now it's in &lt;strong&gt;alpha&lt;/strong&gt;, which means only the e-book is available. Later we'll produce it in print formats (perfect bound, spiral, and hardcover).&lt;/p&gt;

&lt;p&gt;As the book is in alpha, you're encouraged to submit bug reports to us for errors that you find. In turn we will give you credit for your contributions in not just the e-book, but also in the print paperback and online publicly on the web. This is your opportunity to have your name in one of our books as a contributor, which you are then welcome to add to your resume and LinkedIn profile. We followed the same pattern with our Two Scoops of Django books.&lt;/p&gt;

&lt;h2&gt;Check it out!&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://roygreenfeld.com/products/django-crash-course"&gt;&lt;img src="https://daniel.roygreenfeld.com/images/Django_Crash_Course_3_E-Book_Download_740x.jpg" alt="Cover for Django Crash Course" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://roygreenfeld.com/products/django-crash-course"&gt;Django Crash Course&lt;/a&gt; is designed to build solid foundations for any developer looking to get quickly and solidly proficient with Django 3. Once you've finished the book, you'll be able to purchase Django Crash Course extensions on topics such as deployment on various platforms, Django REST Framework (DRF), Javascript frameworks like VueJS and/or React, third-party packages, and more. &lt;/p&gt;

&lt;h2&gt;Some of My Favorite Features&lt;/h2&gt;

&lt;h3&gt;Friendly to Data Scientists&lt;/h3&gt;

&lt;p&gt;We chose &lt;strong&gt;Conda&lt;/strong&gt; as our Python environment and &lt;strong&gt;pip&lt;/strong&gt; for dependency management. This makes getting everything right across different operating systems for students very straightforward.  These tools also empower us to create data-focused extensions to the core book.&lt;/p&gt;

&lt;h3&gt;Class-Based Views&lt;/h3&gt;

&lt;p&gt;Our opinion is that beginners should be taught Class-Based Views (CBVs) from the start. Knowing CBVs from the start makes understanding critical CBV-based packages like &lt;strong&gt;Django REST Framework&lt;/strong&gt; much easier. We also believe that the explicit nature of the &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, and other HTTP methods is easier for beginners to grasp. Years of success at levelling up people with Django supports our opinion.&lt;/p&gt;

&lt;h3&gt;Theme!&lt;/h3&gt;

&lt;p&gt;Tutorial themes are cheesy. That's why we use cheese as the theme for the main project in the book!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We also want to be the most successful dairy-themed tech book authors in the universe.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you'd like to buy the book (or learn more about it), do so on the &lt;a href="https://roygreenfeld.com/products/django-crash-course"&gt;The Django Crash Course page on roygreenfeld.com&lt;/a&gt;.&lt;/p&gt;
</content><published>2020-02-10T22:20:50.520000+00:00</published></entry><entry><id>https://daniel.roygreenfeld.com/adding-metadata-to-pdfs.html</id><title>Adding Metadata to PDFs</title><updated>2020-02-28T04:30:00+00:00</updated><content type="html">&lt;p&gt;For both &lt;a href="https://www.roygreenfeld.com/collections/two-scoops-press/products/django-crash-course"&gt;Django Crash Course&lt;/a&gt; and the forthcoming Two Scoops of Django 3.x, we're using a new process to render the PDFs. Unfortunately, until just a few days ago that process didn't include the cover. Instead, covers were inserted manually using Adobe Acrobat. &lt;/p&gt;

&lt;p&gt;While that manual process worked, &lt;a href="https://github.com/roygreenfeld/django-crash-course/issues/132"&gt;it came with predictable consequences&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Merging the PDFs&lt;/h2&gt;

&lt;p&gt;This part was easy and found in any number of blog articles and Stack Overflow answers. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 1: Install &lt;a href="https://pypi.org/project/PyPDF2/"&gt;pypdf2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Step 2: Write a script as seen below&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyPDF2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PdfFileMerger&lt;/span&gt;

&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;pdfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;images/Django_Crash_Course_5.5x8in.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;_output/dcc.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;merger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PdfFileMerger&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pdfs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;releases/beta-20200226.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It was at this point that we discovered that our new file, &lt;code&gt;releases/beta-20200226.pdf&lt;/code&gt;, was missing most of the metadata. Oh no!&lt;/p&gt;

&lt;h2&gt;Adding the Metadata&lt;/h2&gt;

&lt;p&gt;According to the PyPDF2 docs, &lt;a href="https://pythonhosted.org/PyPDF2/PdfFileMerger.html#PyPDF2.PdfFileMerger.addMetadata"&gt;adding metadata is very straight-forward&lt;/a&gt;. Just pass a &lt;code&gt;dict&lt;/code&gt; into the &lt;code&gt;addMetadata()&lt;/code&gt; function. I inserted this code right before the call to &lt;code&gt;merger.write()&lt;/code&gt;:&lt;/p&gt;

&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addMetadata&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Django Crash Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
    &lt;span class="s2"&gt;&amp;quot;Authors&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Daniel Roy Greenfeld, Audrey Roy Greenfeld&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Covers Python 3.8 and Django 3.x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;ContentCreator&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Two Scoops Press&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;CreateDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2020-02-26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;ModifyDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2020-02-26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The PDF built! Yeah! Time to open it up and see the results!&lt;/p&gt;

&lt;p&gt;Alas, no metadata showed up.&lt;/p&gt;

&lt;p&gt;Then I spent a long time with trial-and-error trying to get the metadata to show up properly. While there are lots of Python-related articles on &lt;strong&gt;extracting&lt;/strong&gt; metadata using PyPDF2, I struggled to find anything that explained how to add metadata.  &lt;/p&gt;

&lt;h2&gt;Doing My Homework&lt;/h2&gt;

&lt;p&gt;After a bunch of research (googling, stack overlow-ing, and visiting forums) I found a wonderful book on O'Reilly called &lt;a href="https://www.oreilly.com/library/view/pdf-explained/9781449321581/"&gt;PDF Explained&lt;/a&gt; by John Whitington. Much credit to John Whitington, he's a good writer and very knowledgable on the topic of PDF. &lt;/p&gt;

&lt;p&gt;For my purposes, the two critical sections were found in Chapter 4 of PDF Explained:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;https://www.oreilly.com/library/view/pdf-explained/9781449321581/ch04.html#didentries&lt;/li&gt;
&lt;li&gt;https://www.oreilly.com/library/view/pdf-explained/9781449321581/ch04.html#dates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Based off what I read, I established the following rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Every metadata field name had to be prefixed with &lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Stick to the metadata names found in chapter 4 &lt;/li&gt;
&lt;li&gt;Follow the date format supplied in chapter 4&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Writing the Code!&lt;/h2&gt;

&lt;p&gt;Now armed with my rules I returned to the code. This is what I came up with:&lt;/p&gt;

&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyPDF2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PdfFileMerger&lt;/span&gt;

&lt;span class="n"&gt;pdfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;images/Django_Crash_Course_5.5x8in.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;_output/dcc.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;merger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PdfFileMerger&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pdfs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Make PDF datestamp&lt;/span&gt;
&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pdf_datestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;D:%Y%m&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;%H%M%S-8&amp;#39;00&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# https://www.oreilly.com/library/view/pdf-explained/9781449321581/ch04.html#didentries&lt;/span&gt;
&lt;span class="c1"&gt;# Fields are **precisely** named&lt;/span&gt;
&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addMetadata&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;/Author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Daniel Roy Greenfeld, Audrey Roy Greenfeld&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;/Title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Django Crash Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;/Subject&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Covers Python 3.8 and Django 3.x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;/Creator&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Two Scoops Press&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;/CreationDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pdf_datestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;/ModDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pdf_datestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;# Write the release&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;beta-&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;releases/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The lesson I learned writing this little utility is that as useful as Google and Stack Overflow might be, sometimes you need to explore reference manuals. Which, if you ask me, is a lot of fun. :-)&lt;/p&gt;

&lt;p&gt;Speaking of reference manuals, while I referenced the online version of &lt;a href="https://www.amazon.com/dp/B006H4DAE6/?tag=mlinar-20"&gt;PDF Explained&lt;/a&gt; to get my work done, I've ordered a kindle version of the book. It's the least I can do.&lt;/p&gt;
</content><published>2020-02-28T04:30:00+00:00</published></entry><entry><id>https://daniel.roygreenfeld.com/two-scoops-of-django-3.x-released.html</id><title>Two Scoops of Django 3.x Released</title><updated>2020-05-11T16:30:00+00:00</updated><content type="html">&lt;p&gt;&lt;a href="https://www.feldroy.com/products/two-scoops-of-django-3-x"&gt;&lt;img src="https://daniel.feldroy.com/images/Two-Scoops-of-Django-3-Alpha-Cover_540x.jpg" alt="Cover for the alpha version of Two Scoops of Django 3.x" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We just released the early release (alpha) of the fifth edition of our book, titled &lt;a href="https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x"&gt;Two Scoops of Django 3.x&lt;/a&gt;. The 3.x means we are supporting Django 3.0, 3.1, and 3.2 Long Term Support (LTS) releases, ensuring the content will be valid until April of 2024.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So long as it is May 11, 2020, anywhere on planet Earth, the &lt;a href="https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x"&gt;e-book&lt;/a&gt; version sells for just US$42.95&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;On May 12th, 2020, the price goes up to &lt;strong&gt;$49.95&lt;/strong&gt;. Hurry up and get your &lt;a href="https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x"&gt;book&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;For now, the &lt;a href="https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x"&gt;e-book&lt;/a&gt; is just in PDF format and will be expanded to epub and mobi formats in the days to come. Readers of this alpha version get all the updates and have the opportunity to help us shape the direction of the book through their feedback, and to be credited as contributors.&lt;/p&gt;

&lt;p&gt;If you bought the 1.11 e-book in 2020 you'll receive an email on May 11th with a discount code covering the cost of the new edition.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x"&gt;book&lt;/a&gt; will also be printed, but for several reasons that won't happen until hopefully August of this year. When we get closer to that date we'll take pre-orders and send everyone who ordered an &lt;a href="https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x"&gt;e-book&lt;/a&gt; a big discount code.&lt;/p&gt;

&lt;p&gt;Due to popular demand, we are selling group licenses of Two Scoops of Django 3.x, in &lt;a href="https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x?variant=31920402432087"&gt;10 developer&lt;/a&gt;, &lt;a href="https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x?variant=31920413737047"&gt;50 developer&lt;/a&gt;, and &lt;a href="https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x?variant=31932839297111"&gt;250 developer&lt;/a&gt; packages. These can be found as options in the product selection dropdown.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.feldroy.com/products/two-scoops-of-django-3-x"&gt;Learn more and order the 5th edition of our venerable series about Django best practices.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.feldroy.com/products/two-scoops-of-django-3-x"&gt;&lt;img src="https://daniel.feldroy.com/images/TSD3-Preview-Cartoon_540x.jpg" alt="Image showing the updating of Two Scoops of Django" /&gt;&lt;/a&gt;&lt;/p&gt;
</content><published>2020-05-11T16:30:00+00:00</published></entry><entry><id>https://daniel.roygreenfeld.com/live-instruction-django-crash-course-july-2020.html</id><title>I'm Teaching A Live Online Django Crash Course</title><updated>2020-07-02T17:30:00+00:00</updated><content type="html">&lt;p&gt;&lt;a href="https://www.feldroy.com/products/django-crash-course?variant=32232086175831"&gt;&lt;img src="https://daniel.feldroy.com/images/dcc-online-training.png" alt="Live Online Django Training" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Course Announcement&lt;/h2&gt;

&lt;p&gt;On July 16th and 17th of 2020, starting at 9AM PST (4PM UTC), I'll be running a &lt;a href="https://www.feldroy.com/products/django-crash-course?variant=32232086175831"&gt;live instruction of my beginner-friendly Django Crash Course.&lt;/a&gt; This is a live interactive class conducted via Zoom conferencing software. We're going to walk through the book together with students. If you get stuck, there will be at least two members of the Feldroy team available to help.&lt;/p&gt;

&lt;p&gt;Each course day will have two sessions each 3 hours long, as well as an hour-long break between sessions.&lt;/p&gt;

&lt;h2&gt;Attendees Receive&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hours of instruction in building web apps by noted authors and senior programmers&lt;/li&gt;
&lt;li&gt;An invite to both July 16th and July 17th class days starting at 9AM PST (4PM UTC)&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://www.feldroy.com/products/django-crash-course"&gt;Django Crash Course e-book&lt;/a&gt; (if you already bought one, we'll send you a discount code for $19.99 off the online class)&lt;/li&gt;
&lt;li&gt;Membership in our forthcoming online forums when they are activated&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Class Prerequisites&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Basic knowledge of the Python programming language&lt;/li&gt;
&lt;li&gt;Computer where you are allowed to install software (No work restrictions)&lt;/li&gt;
&lt;li&gt;Internet fast enough to join online meetings&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Topics Covered&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Setting up a development environment
&lt;ul&gt;
&lt;li&gt;Python 3.8&lt;/li&gt;
&lt;li&gt;Django 3.0&lt;/li&gt;
&lt;li&gt;Database&lt;/li&gt;
&lt;li&gt;VS Code&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Cookiecutter for rapidly accelerating development &lt;/li&gt;
&lt;li&gt;Django
&lt;ul&gt;
&lt;li&gt;Forms&lt;/li&gt;
&lt;li&gt;Class-Based Views&lt;/li&gt;
&lt;li&gt;Models&lt;/li&gt;
&lt;li&gt;Templates&lt;/li&gt;
&lt;li&gt;Admin&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Writing Django tests
&lt;ul&gt;
&lt;li&gt;PyTest&lt;/li&gt;
&lt;li&gt;Factories&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Best practices per &lt;a href="https://www.feldroy.com/products/two-scoops-of-django-3-x?variant=31605362196567"&gt;Two Scoops of Django&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Proven patterns for avoiding duplication of work (&lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRY&lt;/a&gt;)  &lt;/li&gt;
&lt;li&gt;Writing maintainable code&lt;/li&gt;
&lt;li&gt;More secure projects&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We're selling the course for the introductory price of just $99 and space is limited, &lt;a href="https://www.feldroy.com/products/django-crash-course?variant=32232086175831"&gt;so register today!&lt;/a&gt;&lt;/p&gt;
</content><published>2020-07-02T17:30:00+00:00</published></entry><entry><id>https://daniel.roygreenfeld.com/august-2020-courses.html</id><title>August 2020 Courses</title><updated>2020-08-11T23:45:00+00:00</updated><content type="html">&lt;h1&gt;Live, Interactive, Online Courses&lt;/h1&gt;

&lt;p&gt;For years Audrey and I have travelled giving in-person training sessions. With current events being what they are, I've switched to giving live, online, interactive trainings using Zoom meeting software. This has involved some major refactoring of content.&lt;/p&gt;

&lt;p&gt;Here are the upcoming courses on my calendar:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://events.eventzilla.net/e/django-best-practices-the-two-scoops-way-2138797976"&gt;&lt;img src="https://cdn.shopify.com/s/files/1/0304/6901/files/Django_Best_Practices_the_Two_Scoops_Way.png?v=1595531845" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://events.eventzilla.net/e/django-best-practices-the-two-scoops-way-2138797976"&gt;August 14: Django Best Practices the Two Scoops Way&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://events.eventzilla.net/e/django-crash-course-online--august-2138797784"&gt;&lt;img src="https://cdn.shopify.com/s/files/1/0304/6901/files/DCC_Banner_Logo_2.png?v=1595531869" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://events.eventzilla.net/e/django-crash-course-online--august-2138797784"&gt;August 21, 22, 23: Django Crash Course Live&lt;/a&gt;&lt;/p&gt;
</content><published>2020-08-11T23:45:00+00:00</published></entry><entry><id>https://daniel.roygreenfeld.com/its-the-weekend-lets-code-a-python-project.html</id><title>It's the Weekend, Let's Code a Python Project!</title><updated>2020-08-21T23:45:00+00:00</updated><content type="html">&lt;p&gt;It's Friday where I am, maybe Saturday wherever you are. And like me, you're wondering what you are going to code over the weekend. Why code over the weekend? Here are some good reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You want to practice your Python to level up your skills&lt;/li&gt;
&lt;li&gt;Potential employees are asking for portfolio work and your GitHub account is bare&lt;/li&gt;
&lt;li&gt;Coding in Python is fun!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Well, wonder no further because I just helped &lt;a href="https://yasoob.me/"&gt;Yasoob Khalid&lt;/a&gt; of &lt;a href="https://book.pythontips.com/"&gt;Intermediate Python&lt;/a&gt; fame publish his second book, &lt;a href="https://feld.to/ppp"&gt;Practical Python Projects&lt;/a&gt;! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://feld.to/ppp"&gt;&lt;img src="https://daniel.feldroy.com/images/ppp-hero.png" alt="Practical Python Projects" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Practical Python Projects contains a dozen bite-sized weekend-length projects in 325+ pages where Yasoob explores concepts and then codes out solutions. In addition to showing you how he researched each project, he discusses how to change and extend them. This is important because some of the APIs he explores change periodically. This makes the book interesting because it means everyone's experience with it is unique.&lt;/p&gt;

&lt;p&gt;I've been coding in Python for 15 years now, yet I've learned some really useful things from Practical Python Projects. For me, the JPEG encoding project alone has been really fun to explore. Speaking of projects, here they are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FIFA World Cup Twilio Bot&lt;/li&gt;
&lt;li&gt;Making a Reddit + Facebook Messenger Bot&lt;/li&gt;
&lt;li&gt;Scraping Steam Using lxml&lt;/li&gt;
&lt;li&gt;Automatic Invoice Generation&lt;/li&gt;
&lt;li&gt;Article Summarization &amp;amp; Automated Image Generation&lt;/li&gt;
&lt;li&gt;Cinema Pre-show Generator&lt;/li&gt;
&lt;li&gt;Understanding and Decoding a JPEG Image using Python (my favorite!)&lt;/li&gt;
&lt;li&gt;Full Page Scroll Animation Video&lt;/li&gt;
&lt;li&gt;Visualizing Server Locations&lt;/li&gt;
&lt;li&gt;Making a TUI Email Client&lt;/li&gt;
&lt;li&gt;A Music/Video GUI Downloader&lt;/li&gt;
&lt;li&gt;Deploying Flask to Production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're interested in buying &lt;a href="https://feld.to/ppp"&gt;Practical Python Projects&lt;/a&gt; or &lt;a href="https://www.feldroy.com/products/practical-python-projects#faq"&gt;want to know more&lt;/a&gt;, the first 25 people to use code &lt;strong&gt;ppp-pydanny-blog&lt;/strong&gt; for it on &lt;a href="https://feldroy.com"&gt;feldroy.com&lt;/a&gt; will get 15% off. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://feld.to/ppp"&gt;&lt;img src="https://daniel.feldroy.com/images/ppp-cover.png" alt="Practical Python Projects" /&gt;&lt;/a&gt;&lt;/p&gt;
</content><published>2020-08-21T23:45:00+00:00</published></entry></feed>